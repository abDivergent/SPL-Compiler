SPLProgr -> ProcDefs main { Algorithm halt ; VarDecl }
ProcDefs -> 
ProcDefs -> PD , ProcDefs
PD -> proc userDefinedName { ProcDefs Algorithm return ; VarDecl }
Algorithm -> 
Algorithm -> Instr ; Algorithm
Instr -> Assign
Instr -> Branch
Instr -> Loop
Instr -> PCall
Assign -> LHS := Expr
Branch -> if  ( Expr ) then { Algorithm } Alternat
Alternat -> 
Alternat -> else { Algorithm }
Loop -> do { Algorithm } until  ( Expr )
Loop -> while  ( Expr ) do { Algorithm }
LHS -> output
LHS -> Var
LHS -> Field
Expr -> Const
Expr -> Var
Expr -> Field
Expr -> UnOp
Expr -> BinOp
PCall -> call userDefinedName
Var -> userDefinedName
Field -> userDefinedName [ Var ]
Field -> userDefinedName [ Const ]
Const -> ShortString
Const -> Number
Const -> true
Const -> false
UnOp -> input ( Var )
UnOp -> not ( Expr )
BinOp -> and ( Expr , Expr )
BinOp -> or ( Expr , Expr )
BinOp -> eq ( Expr , Expr )
BinOp -> larger ( Expr , Expr )
BinOp -> add ( Expr , Expr )
BinOp -> sub ( Expr , Expr )
BinOp -> mult ( Expr , Expr )
VarDecl -> 
VarDecl -> Dec ; VarDecl
Dec -> TYP Var
Dec -> arr TYP [ Const ] Var
TYP -> num
TYP -> bool
TYP -> string